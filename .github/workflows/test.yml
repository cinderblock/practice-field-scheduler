name: Test

on:
  push:
  pull_request_target:

jobs:
  test:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    env:
      DATA_DIR: .tmp/ci-data
      TEST_AUTH_BYPASS: "1"

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Run unit test
        id: unit
        run: npm run test:unit
        env:
          FIRST_API_USERNAME: ${{ vars.FIRST_API_USERNAME }}
          FIRST_API_AUTH_TOKEN: ${{ secrets.FIRST_API_AUTH_TOKEN }}

      - name: Run e2e test
        if: success() || steps.unit.conclusion == 'failure'
        id: e2e
        run: npm run test:e2e
        env:
          FIRST_API_USERNAME: ${{ vars.FIRST_API_USERNAME }}
          FIRST_API_AUTH_TOKEN: ${{ secrets.FIRST_API_AUTH_TOKEN }}

      - name: Load test report history
        # Even if tests fail, we want to generate the reports
        if: success() || steps.unit.conclusion == 'failure' || steps.e2e.conclusion == 'failure'
        id: history
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages

      - name: Build test report
        uses: simple-elf/allure-report-action@v1.7
        if: success() || steps.history.conclusion == 'success'
        id: report
        with:
          gh_pages: gh-pages
          allure_history: allure-history

      - name: Publish test report
        uses: peaceiris/actions-gh-pages@v4
        if: success() || steps.report.conclusion == 'success'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run lint
        run: npm run check

      - name: Run typecheck
        run: npm run typecheck
